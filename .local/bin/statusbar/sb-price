#!/bin/sh
#
# Usage:
#	price <url> <Name of currency> <icon> [amount hold] [ price purchased in $]
#	price BTC "Bitcoin" ïš« 0.1382 4543
# ttf-nerd-fonts-symbols-mono is required to show crypto symbols
# When the name of the currency is multi-word, put it in quotes.
##

[ -z "$3" ] && exit 1

symbol="$(echo $1 | tr '[a-z]' '[A-Z]')"
interval="@3d"	# History contained in chart preceded by '@' (7d = 7 days)
dir="${XDG_DATA_HOME:-$HOME/.local/share}/crypto-prices"
pricefile="$dir/$symbol"
chartfile="$dir/$symbol-chart"
valuefile="$dir/$symbol-value"
value=$4
pvalue=$5

updateprice() { ping -q -c 1 example.org >/dev/null 2>&1 &&
	curl -s "rate.sx/1$symbol" > "$pricefile" &&
	curl -s "rate.sx/$symbol$interval" > "$chartfile" &&
	pkill -RTMIN+29 "${STATUSBAR:-dwmblocks}" &&
[ -n "$pvalue" ] && curl -s "usd.rate.sx/$value$symbol" > "$valuefile" ;}


[ -d "$dir" ] || mkdir -p "$dir"

# update by i3blocks interval , uncomment for daily updates.
#[ "$(stat -c %x "$pricefile" 2>/dev/null | cut -d' ' -f1)" != "$(date '+%Y-%m-%d')" ] &&
	updateprice "$symbol"

theprice=$(cat "$pricefile")
thevalue=$(cat "$valuefile")
worth=$(awk "BEGIN {printf\"%.2f%%\",100*(${thevalue}/${pvalue}-1)}")

case $BLOCK_BUTTON in
	1) setsid "$TERMINAL" -e less -Srf "$chartfile" ;;
	2) notify-send -u low "$3 Updating..." "Updating $2 price..."
		updateprice "$symbol" && notify-send "$3 Update complete." "$2 price is now
\$$(cat "$pricefile")" ;;
	3) uptime="$(date -d "$(stat -c %x "$pricefile")" '+%D at %T' | sed "s|$(date '+%D')|Today|")"
		[ -n "$pvalue" ] && worth_cash=$(awk "BEGIN {printf\"$%.2f\",(${thevalue}-${pvalue}-1)}") || worth_cash=N/A
		[ -n "$pvalue" ] && thevalue_hold=$(printf "$%.0f" $thevalue) || thevalue_hold=N/A
		notify-send "$3 $2 module" "\- Exact price: <b>\$$(cat "$pricefile")</b>
- Hold:  <b>$thevalue_hold </b>
- Cash:  <b>$worth_cash </b>
- Last updated:
 <b>$uptime</b>" ;;
	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
esac



## coloring staff
BOLD='<span font-weight="bold">'
GREEN='<span color="#32CD32">'
RED='<span color="#DC143C">'
span="</span>"

# change color by Low/High values
  if [ "$worth" == "0" ]; then
    color=
  elif ( echo "$worth" | grep -q ^- ); then
    color=$RED
  else
    color=$GREEN
  fi

#  getting characters count didnt worked out with #
#  thepricenum=""${#theprice%%.*}""

 thepricenum="${theprice%%.*}"
 len=`expr length "$thepricenum"`

 if [ "$theprice" != "null" ]; then

if [ "$len" -lt 3 ]; then # if price is less the 3 decimal show as float
    printf "$BOLD$3$%.2f $span" $theprice
else
    printf "$BOLD$3$%.0f $span" $theprice
fi
    [ -n "$pvalue" ] && printf "$color%s$span" $worth
	fi
echo ""
